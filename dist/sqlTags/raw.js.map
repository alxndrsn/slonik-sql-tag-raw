{"version":3,"file":"raw.js","names":["_utilities","require","raw","sql","values","Array","isArray","type","Symbol","for","interpolatePositionalParameterReferences","interpolateNamedParameterReferences","_default","exports","default"],"sources":["../../src/sqlTags/raw.js"],"sourcesContent":["// @flow\n\nimport type {\n  SqlSqlTokenType,\n  ValueExpressionType,\n} from 'slonik';\nimport {\n  interpolatePositionalParameterReferences,\n  interpolateNamedParameterReferences,\n} from '../utilities';\n\nexport default (\n  sql: string,\n  values?: $ReadOnlyArray<ValueExpressionType>,\n): SqlSqlTokenType => {\n  if (Array.isArray(values)) {\n    // $FlowFixMe\n    return {\n      type: Symbol.for('SLONIK_TOKEN_SQL'),\n      ...interpolatePositionalParameterReferences(sql, values),\n    };\n  } else {\n    // $FlowFixMe\n    return {\n      type: Symbol.for('SLONIK_TOKEN_SQL'),\n      ...interpolateNamedParameterReferences(sql, values),\n    };\n  }\n};\n"],"mappings":";;;;;;AAMA,IAAAA,UAAA,GAAAC,OAAA;AAGsB,MAAAC,GAAA,GAAAA,CAGpBC,GAAW,EACXC,MAA4C,KACxB;EACpB,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACzB;IACA,OAAO;MACLG,IAAI,EAAEC,MAAM,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACpC,GAAG,IAAAC,mDAAwC,EAACP,GAAG,EAAEC,MAAM;IACzD,CAAC;EACH,CAAC,MAAM;IACL;IACA,OAAO;MACLG,IAAI,EAAEC,MAAM,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACpC,GAAG,IAAAE,8CAAmC,EAACR,GAAG,EAAEC,MAAM;IACpD,CAAC;EACH;AACF,CAAC;AAAA,IAAAQ,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAAAZ,GAAA","ignoreList":[]}